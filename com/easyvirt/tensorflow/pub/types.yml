tosca_definitions_version: alien_dsl_2_0_0

metadata:
  template_name: com.easyvirt.tensorflow.pub
  template_version: 0.0.2-SNAPSHOT
  template_author: easyvirt

description: Tensorflow installation

imports:
  - tosca-normative-types:1.0.0-ALIEN20
  - org.ystia.common:2.0.0-SNAPSHOT
  - org.ystia.python.pub:2.0.0-SNAPSHOT
  - org.ystia.python.linux.bash:2.0.0-SNAPSHOT

node_types:
  com.easyvirt.tensorflow.pub.nodes.TensorFlow:
    derived_from: tosca.nodes.SoftwareComponent
    abstract: true
    description: A node that represents a tensorflow software.
    metadata:
      icon: /images/tensorflow.png
    requirements:
      - host:
          capability: org.ystia.python.pub.capabilities.PythonHosting
          relationship: org.ystia.python.pub.relationships.HostedOnPythonRuntime
          occurrences: [1,1]
          #          capability: org.ystia.python.pub.capabilities.PythonHosting
          # node: org.ystia.nodes.SoftwareComponent
          #relationship: org.ystia.python.pub.relationships.HostedOnPythonRuntime
      - filesystem_endpoint:
          capability: tosca.capabilities.Node
          relationship: com.easyvirt.tensorflow.pub.relationships.ConnectsTensorflowToFilessystem
          occurrences: [0,1]


relationship_types:
  com.easyvirt.tensorflow.pub.relationships.ConnectsTensorflowToFilessystem:
    derived_from: org.ystia.relationships.ConnectsTo
    description: Connects TensorFlow to a FileSystem to specify where will be stored the models.
    valid_target_types: [ tosca.capabilities.Node ]
    interfaces:
      Configure:
          pre_configure_source:
            implementation: scripts/tensorflow-to-filesystem.sh
            inputs:
              path_fs: { get_property: [ TARGET, location ] }
